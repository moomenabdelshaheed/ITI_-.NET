// <auto-generated />
using System;
using EFDay02.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFDay02.Migrations
{
    [DbContext(typeof(journalContext))]
    partial class journalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFDay02.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Smith",
                            email = "john.smith@example.com",
                            password = "123456"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Emily Johnson",
                            email = "emily.johnson@example.com",
                            password = "pass789"
                        },
                        new
                        {
                            Id = 3,
                            Name = "David Brown",
                            email = "david.brown@example.com",
                            password = "admin321"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sophia Davis",
                            email = "sophia.davis@example.com",
                            password = "qwerty"
                        });
                });

            modelBuilder.Entity("EFDay02.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tech news and trends",
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Health and wellness articles",
                            Name = "Health"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Financial tips and news",
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Education systems and updates",
                            Name = "Education"
                        });
                });

            modelBuilder.Entity("EFDay02.Model.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("bref")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CatId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CatId = 1,
                            DateTime = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest developments in AI and how it changes the world.",
                            Title = "AI Breakthrough",
                            bref = "New AI tech"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CatId = 2,
                            DateTime = new DateTime(2024, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Top wellness trends you need to know.",
                            Title = "Healthy Living",
                            bref = "Wellness trends"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CatId = 3,
                            DateTime = new DateTime(2024, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An overview of the stock market and projections.",
                            Title = "Stock Market Insights",
                            bref = "Market analysis"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            CatId = 4,
                            DateTime = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "New reforms in the education system.",
                            Title = "Education Reforms",
                            bref = "System updates"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            CatId = 1,
                            DateTime = new DateTime(2024, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "How AI and automation are impacting jobs.",
                            Title = "Future of Tech Jobs",
                            bref = "Career advice"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            CatId = 2,
                            DateTime = new DateTime(2024, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Understanding mental health in modern society.",
                            Title = "Mental Health Awareness",
                            bref = "Mind matters"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            CatId = 3,
                            DateTime = new DateTime(2024, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "How to invest safely in cryptocurrency.",
                            Title = "Crypto Investment Tips",
                            bref = "Digital finance"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            CatId = 4,
                            DateTime = new DateTime(2024, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comparison between top online education platforms.",
                            Title = "Online Learning Platforms",
                            bref = "E-learning"
                        });
                });

            modelBuilder.Entity("EFDay02.Model.News", b =>
                {
                    b.HasOne("EFDay02.Model.Author", "Author")
                        .WithMany("News")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFDay02.Model.Category", "Category")
                        .WithMany("Newsincat")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EFDay02.Model.Author", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("EFDay02.Model.Category", b =>
                {
                    b.Navigation("Newsincat");
                });
#pragma warning restore 612, 618
        }
    }
}
